{"version":3,"sources":["component/Map.js","api/index.js","component/ListItem.js","component/VenueList.js","component/SideBar.js","component/Hero.js","App.js","serviceWorker.js","index.js"],"names":["MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","markers","filter","marker","isVisible","map","idx","arr","venueInfo","venues","find","venue","id","key","position","onClick","handleMarkerClick","animation","length","isOpen","google","maps","Animation","BOUNCE","DROP","bestPhoto","Fragment","src","concat","prefix","suffix","alt","name","Map","Object","assign","this","isMarkerShown","googleMapURL","loadingElement","className","containerElement","mapElement","Component","Helper","keys","client_id","client_secret","v","join","urlPrams","Accept","endPoint","method","requestData","headers","fetch","baseURL","auth","urlBuilder","then","res","json","SquareApi","simpleFetch","VENUE_ID","ListItem","_this","handleListItemClick","categories","icon","location","formattedAddress","VenueList","ListItem_ListItem","SideBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterVenues","state","query","trim","toLowerCase","includes","console","log","handleChange","e","setState","target","value","nameMatched","locationMatched","updateSuperState","type","placeholder","onChange","VenueList_VenueList","Hero","App","closeAllMarkers","setCenter","getVenueDetails","newVenue","response","searchVenues","version","URLSearchParams","near","radius","limit","ok","Error","statusText","geocode","feature","geometry","catch","error","obj","Hero_Hero","SideBar_SideBar","Map_Map","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fc0e490.chunk.js","sourcesContent":["/* global google */\r\nimport React, { Component } from \"react\";\r\nimport { withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow \r\n} from \"react-google-maps\";\r\n\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={8}\r\n    zoom={props.zoom}\r\n    defaultCenter={{ lat: 30.397, lng: -97.644 }}\r\n    center={props.center}\r\n    >\r\n\r\n    {props.markers &&\r\n     props.markers.filter(marker => marker.isVisible)\r\n      .map((marker, idx, arr) => {\r\n        const venueInfo = props.venues.find(venue => venue.id === marker.id);\r\n        return <Marker\r\n          key={idx} \r\n          position={{ lat: marker.lat, lng: marker.lng}}\r\n          onClick={() => props.handleMarkerClick(marker)}\r\n          animation={arr.length === 1 || marker.isOpen\r\n            ? google.maps.Animation.BOUNCE  \r\n            : google.maps.Animation.DROP }\r\n        >\r\n          {marker.isOpen && \r\n          venueInfo.bestPhoto && (\r\n            <InfoWindow>\r\n              <React.Fragment>\r\n                <img\r\n                src={`${venueInfo.bestPhoto.prefix}200x200${venueInfo.bestPhoto.suffix}`}\r\n                alt={venueInfo.name}/>\r\n                <p>{venueInfo.name}</p>\r\n              </React.Fragment>\r\n            </InfoWindow>\r\n          )}\r\n        </Marker>\r\n      })}\r\n  </GoogleMap>\r\n))\r\n);\r\n\r\n  \r\n\r\n\r\nexport default class Map extends Component {\r\n  render(){\r\n    return (\r\n    < MyMapComponent\r\n      {...this.props}\r\n      isMarkerShown\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyCzmnNpxUWrJ23VyI57iji2JPRrYwKxx64\"\r\n      loadingElement={< div className='loading-element' />}\r\n      containerElement={< div className='map-container' />}\r\n      mapElement={< div  className='map-element' />}\r\n    />\r\n    );\r\n  }\r\n}  ","//credit: for squareApi https://www.youtube.com/watch?v=Dj5hzKBxCBI&list=PL4rQq4MQP1crXuPtruu_eijgOUUXhcUCP&index=3\r\n\r\nclass Helper {\r\n  static baseURL(){\r\n    return \"https://api.foursquare.com/v2\"\r\n  }\r\n  static auth(){\r\n    const keys = {\r\n      client_id: 'L0ZK3VLIPIYJBRFHR2D421ZUPVBOEBUPMR5PQFKWDMT1UQJA',\r\n      client_secret: 'HH1FKHUKXA4LNKNEGZ0PKSO3OJTJHOQS04ZWVKN3LRSB3ENG',\r\n      v: '20180323'\r\n    };\r\n    return Object.keys(keys)\r\n      .map(key => `${key}=${keys[key]}`)\r\n      .join('&');\r\n  }\r\n  static urlBuilder(urlPrams){\r\n    if(!urlPrams){\r\n      return \"\"\r\n    }\r\n    return Object.keys(urlPrams)\r\n      .map(key => `${key}=${urlPrams[key]}`)\r\n      .join(\"&\");\r\n  }\r\n  static headers() {\r\n    return {\r\n      Accept: 'application/json'\r\n    };\r\n  }\r\n  static simpleFetch(endPoint, method, urlPrams){\r\n    let requestData = {\r\n      method,\r\n      headers: Helper.headers()\r\n    };\r\n    return fetch(`${Helper.baseURL()}${endPoint}${Helper.auth()}&${Helper.urlBuilder(\r\n      urlPrams\r\n    )}`,\r\n    requestData\r\n    ).then(res => res.json());\r\n  }\r\n} \r\n\r\nexport default class SquareApi {\r\n  static search(urlPrams){\r\n    return Helper.simpleFetch('/venues/search?', 'GET', urlPrams);\r\n  }\r\n  static getVenueDetails(VENUE_ID){\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}?`,\"GET\");\r\n  }\r\n  static getVenuePhotos(VENUE_ID){\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}/photos?`, \"GET\");\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class ListItem extends Component {\r\n  render() {\r\n    return (\r\n      <li \r\n        className=\"listItem\"\r\n        onClick={() => this.props.handleListItemClick(this.props)}\r\n        >\r\n        <img src={this.props.categories[0].icon.prefix+'32'+this.props.categories[0].icon.suffix} alt={'venue'}/>\r\n        <div className='details'>\r\n          <p className=\"details-name\">{this.props.name}</p>\r\n          <p>{this.props.location.formattedAddress[1]}</p>\r\n        </div>\r\n        \r\n      </li>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nexport default class VenueList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"venuList\">\r\n        {this.props.venues && \r\n          this.props.venues.map((venue, idx) => ( \r\n            <ListItem \r\n              key={idx} \r\n              {...venue}\r\n              handleListItemClick={this.props.handleListItemClick}\r\n            />\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport VenueList from \"./VenueList\";\r\n\r\nexport default class SideBar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      query: '',\r\n      venues: []\r\n    };\r\n  }\r\n\r\n\r\n  handleFilterVenues = () => {\r\n      if(this.state.query.trim() !== '') {\r\n      const venues = this.props.venues.filter(venue =>  \r\n      venue.name.toLowerCase().includes(this.state.query.toLowerCase()) +    \r\n      venue.location.formattedAddress[1].toLowerCase().includes(this.state.query.toLowerCase()));\r\n      console.log(venues);\r\n      return venues;\r\n    }\r\n     return this.props.venues;\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.target.value });\r\n\r\n    const markers = this.props.venues.map(venue => { \r\n      const nameMatched = venue.name\r\n      .toLowerCase()\r\n      .includes(e.target.value.toLowerCase());\r\n      const locationMatched = venue.location.formattedAddress[1]\r\n        .toLowerCase()\r\n        .includes(e.target.value.toLowerCase());\r\n      const marker = this.props.markers.find(marker => marker.id === venue.id);\r\n      if(nameMatched || locationMatched) {\r\n        marker.isVisible = true;\r\n      } else {\r\n        marker.isVisible = false;\r\n      }\r\n      return marker;\r\n    });\r\n    // this.props.updateSuperState({markers: Object.assign(this.props.markers, markers)});\r\n    // this.props.updateSuperState({markers: markers});\r\n    this.props.updateSuperState({ markers });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n    <div className='sidebar'>\r\n      <input \r\n        type={'search'}\r\n        id={'search'} \r\n        placeholder={'search'}\r\n        onChange={this.handleChange}\r\n        />\r\n      <VenueList \r\n        {...this.props}\r\n        venues={this.handleFilterVenues()}\r\n        handleListItemClick={this.props.handleListItemClick}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Hero extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"image-container\">\r\n        <div className=\"screen\">\r\n          <h1>MI Brews</h1>\r\n          <p>Metro Detroit Brewing Companys</p>\r\n        </div>  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './component/Map';\nimport SquareApi from './api';\nimport SideBar from './component/SideBar';\nimport Hero from './component/Hero';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state ={\n      venues: [],\n      markers: [],\n      center: [],\n      zoom: 7,\n      updateSuperState: obj => {\n        this.setState(obj);\n      }\n    };\n  }\n\n  closeAllMarkers = () => {\n    const markers = this.state.markers.map(marker => {\n      marker.isOpen = false;\n      return marker;\n    });\n    this.setState({markers: Object.assign(this.state.markers, markers) });\n  };\n\n  setCenter = (marker) => {\n    this.setState({center: Object.assign(this.state.center, marker.lat, marker.lng)});\n    // console.log(marker);\n  }\n\n      \n\n\n  handleMarkerClick = (marker) => {\n    this.closeAllMarkers();\n    this.setCenter(marker);\n    marker.isOpen = true;\n    this.setState({markers: Object.assign(this.state.markers,marker)})\n    const venue = this.state.venues.find(venue => venue.id === marker.id);\n\n   \n\n\n    // getVenueDetails(marker.id)\n    SquareApi.getVenueDetails(marker.id) \n    .then(res => {\n      const newVenue = Object.assign(venue, res.response.venue);\n      this.setState({venues: Object.assign(this.state.venues, newVenue)});\n      // console.log(newVenue);\n    });\n  };\n\n  handleListItemClick = (venue) => {\n    const marker = this.state.markers.find(marker => marker.id === venue.id);\n    this.handleMarkerClick(marker);\n    console.log(venue);\n  };\n  //SquareApi.//marker.id\n  \n\n\n  searchVenues = (version) => {\n    const endPoint = \"https://api.foursquare.com/v2/venues/search?\"\n    const parameters = {\n        client_id: \"L0ZK3VLIPIYJBRFHR2D421ZUPVBOEBUPMR5PQFKWDMT1UQJA\",\n        client_secret: \"HH1FKHUKXA4LNKNEGZ0PKSO3OJTJHOQS04ZWVKN3LRSB3ENG\",\n        v: version,\n        near: 'Brighton, MI',\n        radius: 500000,\n        query: 'brewery',\n        limit: 10\n  }\n\n  fetch(\n    endPoint + new URLSearchParams(parameters))\n    .then((res) => {\n        if (!res.ok) {\n              throw Error(res.statusText);\n        }\n        return res.json();\n    })\n    .then(res => {\n      console.log(res.response.venues);\n      const { venues } = res.response;\n      const { center } = res.response.geocode.feature.geometry;\n      const markers = venues.map(venue => {\n        return {\n          lat: venue.location.lat,\n          lng: venue.location.lng,\n          isOpen: false,\n          isVisible: true,\n          id: venue.id\n        };\n      });\n      this.setState({ venues, center, markers });\n    }).catch(error => {\n        console.log(\"ERROR! \" + error);\n    });\n  }\n  \n\n  componentDidMount(){\n    this.searchVenues(20180323);\n    // SquareApi.search({\n    //   near: 'Brighton, MI',\n    //   radius: 500000,\n    //   query: 'brewery',\n    //   limit: 5\n    // }).then(results => {\n    //     const { venues } = results.response;\n    //     const { center } = results.response.geocode.feature.geometry;\n    //     const markers = venues.map(venue => {\n    //       return {\n    //         lat: venue.location.lat,\n    //         lng: venue.location.lng,\n    //         isOpen: false,\n    //         isVisible: true,\n    //         id: venue.id\n    //       };\n    //     });\n    //     this.setState({ venues, center, markers });\n    //   // console.log(results.response);\n    // });\n  }\n\n  render() {\n    return (\n      \n      <div className=\"App\">\n        <Hero />\n        <div className=\"main\">\n          <SideBar\n            {...this.state}\n            handleListItemClick={this.handleListItemClick}\n          />\n\n          <Map\n            {...this.state}\n            handleMarkerClick={this.handleMarkerClick}\n          />\n        </div>\n     \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
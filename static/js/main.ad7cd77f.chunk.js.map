{"version":3,"sources":["component/Map.js","api/index.js","component/ListItem.js","component/VenueList.js","component/SideBar.js","component/Hero.js","component/Brewery.js","App.js","serviceWorker.js","index.js"],"names":["gMapUrl","concat","process","MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","tabIndex","markers","filter","marker","isVisible","map","idx","arr","venueInfo","venues","find","venue","id","key","position","onClick","handleMarkerClick","animation","length","isOpen","google","maps","Animation","BOUNCE","DROP","bestPhoto","InfoBox_default","Fragment","className","src","prefix","suffix","alt","name","aria-labelledby","href","shortUrl","target","rel","Map","Object","assign","this","isMarkerShown","googleMapURL","loadingElement","containerElement","mapElement","Component","Helper","keys","client_id","client_secret","v","join","urlPrams","Accept","endPoint","method","requestData","headers","fetch","baseURL","auth","urlBuilder","then","res","json","catch","error","window","alert","SquareApi","simpleFetch","VENUE_ID","ListItem","_this","myObj","objectSpread","photo","role","handleListItemClick","location","formattedAddress","VenueList","ListItem_ListItem","Link","to","pathname","state","SideBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterVenues","query","trim","toLowerCase","includes","console","log","handleChange","e","setState","value","nameMatched","locationMatched","updateSuperState","type","placeholder","onChange","VenueList_VenueList","Hero","Brewery","hours","description","Route","require","REACT_APP_ID","REACT_APP_SECRET","App","closeAllMarkers","getVenueDetails","newVenue","response","searchVenues","version","URLSearchParams","near","radius","limit","ok","Error","statusText","geocode","feature","geometry","getPhotos","forEach","venueMatch","obj","gm_authFailure","_this2","Hero_Hero","exact","path","render","SideBar_SideBar","Map_Map","component_Brewery","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","BrowserRouter","basename","src_App_0","document","getElementById","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad7cd77f.chunk.js","sourcesContent":["/* global google */\r\n//map components use react-google-maps https://tomchentw.github.io/react-google-maps/\r\nimport React, { Component } from \"react\";\r\nimport { withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\r\n\r\nconst REACT_APP_MAP_KEY = process.env.REACT_APP_MAP_KEY;\r\nconst gMapUrl = `https://maps.googleapis.com/maps/api/js?v=3.exp&key=${REACT_APP_MAP_KEY}`;\r\n\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={7}\r\n    zoom={props.zoom}\r\n    defaultCenter={{ lat: 30.397, lng: -97.644 }}\r\n    center={props.center}\r\n    tabIndex={-1}\r\n    >\r\n    {/* if there is markers filter visible markers  */}\r\n    {props.markers &&\r\n     props.markers.filter(marker => marker.isVisible)\r\n    //  map over visible markers \r\n    // index as key\r\n      .map((marker, idx, arr) => {\r\n        const venueInfo = props.venues.find(venue => venue.id === marker.id);\r\n\r\n        return <Marker\r\n          key={idx} \r\n          position={{ lat: marker.lat, lng: marker.lng}}\r\n          onClick={() => props.handleMarkerClick(marker)}\r\n          // animate 1 open marker\r\n          animation={arr.length === 1 || marker.isOpen\r\n            ? google.maps.Animation.BOUNCE\r\n            //animate drop all markers  \r\n            : google.maps.Animation.DROP }\r\n        >\r\n        {/* info window */}\r\n          {marker.isOpen && \r\n          venueInfo.bestPhoto && (\r\n            <InfoBox>\r\n              <React.Fragment>\r\n                <div className=\"info-container\">\r\n                  <img className=\"info-image\"\r\n                    src={`${venueInfo.bestPhoto.prefix}100x100${venueInfo.bestPhoto.suffix}`}\r\n                    alt={venueInfo.name} />\r\n                  <div className='info-div'>\r\n                    <p className=\"info-name\">{venueInfo.name}</p>\r\n                    <a aria-labelledby={'more info'}\r\n                     className=\"info-url\" \r\n                     href={venueInfo.shortUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                     >View Details</a>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            </InfoBox>\r\n          )}\r\n        </Marker>\r\n      })}\r\n  </GoogleMap>\r\n))\r\n)\r\n\r\n\r\nexport default class Map extends Component {\r\n  render(){\r\n    return (\r\n    < MyMapComponent \r\n      {...this.props}\r\n      isMarkerShown\r\n      googleMapURL={gMapUrl}\r\n      loadingElement={< div className='loading-element' />}\r\n      containerElement={< div className='map-container' />}\r\n      mapElement={< div  className='map-element' />}\r\n    />\r\n    );\r\n  }\r\n}  ","//credit: for squareApi https://www.youtube.com/watch?v=Dj5hzKBxCBI&list=PL4rQq4MQP1crXuPtruu_eijgOUUXhcUCP&index=3\r\n// const env = from './env'\r\nconst REACT_APP_ID = process.env.REACT_APP_ID;\r\nconst REACT_APP_SECRET = process.env.REACT_APP_SECRET;\r\n// console.log(REACT_APP_ID);\r\n// console.log(REACT_APP_SECRET);\r\n\r\nclass Helper {\r\n  static baseURL(){\r\n    return \"https://api.foursquare.com/v2\"\r\n  }\r\n  static auth(){\r\n    const keys = {\r\n      client_id: REACT_APP_ID,\r\n      client_secret: REACT_APP_SECRET,\r\n      v: '20180323'\r\n    };\r\n    return Object.keys(keys)\r\n      .map(key => `${key}=${keys[key]}`)\r\n      .join('&');\r\n  }\r\n  static urlBuilder(urlPrams){\r\n    if(!urlPrams){\r\n      return \"\"\r\n    }\r\n    return Object.keys(urlPrams)\r\n      .map(key => `${key}=${urlPrams[key]}`)\r\n      .join(\"&\");\r\n  }\r\n  static headers() {\r\n    return {\r\n      Accept: 'application/json'\r\n    };\r\n  }\r\n  static simpleFetch(endPoint, method, urlPrams){\r\n    let requestData = {\r\n      method,\r\n      headers: Helper.headers()\r\n    };\r\n    return fetch(`${Helper.baseURL()}${endPoint}${Helper.auth()}&${Helper.urlBuilder(\r\n      urlPrams\r\n    )}`,\r\n    requestData\r\n    ).then(res => res.json())\r\n    .catch(error => {\r\n        window.alert(\"ERROR! \" + error);\r\n    });\r\n  }\r\n} \r\n\r\nexport default class SquareApi {\r\n  static search(urlPrams){\r\n    return Helper.simpleFetch('/venues/search?', 'GET', urlPrams);\r\n  }\r\n  static getVenueDetails(VENUE_ID){\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}?`,\"GET\");\r\n  }\r\n  static getVenuePhotos(VENUE_ID){\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}/photos?`, \"GET\");\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\n// import Brewery from './Brewery';\r\n\r\n\r\nexport default class ListItem extends Component {\r\n\r\n  render() {\r\n    \r\n    const myObj = { ...this.props.bestPhoto };\r\n    let photo = myObj.prefix + '100x100' + myObj.suffix;\r\n    return (\r\n      <div className='details'>\r\n      <li \r\n        aria-labelledby={this.props.name}\r\n        role={'contentinfo'}\r\n        tabIndex={0}\r\n        onClick={() => this.props.handleListItemClick(this.props)}\r\n        >\r\n\r\n        <img src={photo} alt={this.props.name}/>\r\n        <div className='details-details'>\r\n          <p className=\"details-name\">{this.props.name}</p>\r\n          <p className=\"details-address\">{this.props.location.formattedAddress[0]}</p>\r\n        </div>\r\n      </li>\r\n      </div>//enclosing tag\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport ListItem from './ListItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class VenueList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"venuList\">\r\n        {this.props.venues && \r\n          this.props.venues.map((venue, idx) => ( \r\n          <div className=\"list-item\">\r\n            <ListItem \r\n              key={venue.id} \r\n              {...venue}\r\n              {...this.props}\r\n              handleListItemClick={this.props.handleListItemClick}\r\n            />\r\n          \r\n            <Link\r\n              className='button'\r\n              key={idx}\r\n              to={{\r\n                pathname: '/brewery',\r\n                state: {\r\n                  venues: this.props.venues[idx],\r\n                  markers: this.props.markers\r\n                }\r\n              }}\r\n            >\r\n              <button>More Details</button>\r\n          </Link>\r\n          </div>\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport VenueList from \"./VenueList\";\r\n\r\nexport default class SideBar extends Component {\r\n  constructor() {\r\n    super();\r\n    // query set to empty string\r\n    this.state = {\r\n      query: '',\r\n      venues: []\r\n    };\r\n  }\r\n\r\n// The list items and markers will display only those which match the query\r\n  handleFilterVenues = () => {\r\n    // if query does not equal an empty string\r\n      if(this.state.query.trim() !== '') {\r\n      const venues = this.props.venues.filter(venue =>  \r\n      // toLowerCase so the user can use capital or lowercase in search query\r\n      //str.includes(query) checks the str against the query.toLowerCase\r\n      //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n      venue.name.toLowerCase().includes(this.state.query.toLowerCase()) +    \r\n      venue.location.formattedAddress[1].toLowerCase().includes(this.state.query.toLowerCase()));\r\n      console.log(venues);\r\n      //returning the venues that match\r\n      return venues;\r\n    }\r\n    // all\r\n     return this.props.venues;\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.target.value });\r\n\r\n    const markers = this.props.venues.map(venue => {\r\n      // toLowerCase so the user can use capital or lowercase in search query\r\n      //str.includes(query) checks the str against the query.toLowerCase\r\n      //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n      const nameMatched = venue.name\r\n      .toLowerCase()\r\n      .includes(e.target.value.toLowerCase());\r\n      const locationMatched = venue.location.formattedAddress[1]\r\n        .toLowerCase()\r\n        .includes(e.target.value.toLowerCase());\r\n      const marker = this.props.markers.find(marker => marker.id === venue.id);\r\n      //if the name or location matched marker is visible\r\n      if(nameMatched || locationMatched) {\r\n        marker.isVisible = true;\r\n      } else {\r\n        marker.isVisible = false;\r\n      }\r\n      //returning the markers that match\r\n      return marker;\r\n    });\r\n    //The below is just a reminder for myself since I'm new to React\r\n    // this.props.updateSuperState({markers: Object.assign(this.props.markers, markers)});\r\n    // this.props.updateSuperState({markers: markers});\r\n    this.props.updateSuperState({ markers });\r\n  };\r\n\r\n\r\n  // venueImage = (VENUE_ID) => {\r\n  //   this.props.venuePhotos.forEach(photo => {\r\n  //     if (photo.id === VENUE_ID) {\r\n  //       console.log(`${photo.bestPhoto.prefix}100x100${photo.bestPhoto.suffix}`);\r\n  //       return `${photo.bestPhoto.prefix}100x100${photo.bestPhoto.suffix}`;\r\n  //     }\r\n  //   });\r\n  //   return;\r\n  // }\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div className='sidebar'>\r\n      <input \r\n        type={'search'}\r\n        id={'search'} \r\n        placeholder={'Search'}\r\n        onChange={this.handleChange}\r\n        aria-labelledby={'search'}\r\n        tabIndex={0}\r\n        />\r\n      <VenueList \r\n        {...this.props}\r\n        // venueImage={this.venueImage}\r\n        venues={this.handleFilterVenues()}\r\n        handleListItemClick={this.props.handleListItemClick}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Hero extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"image-container\">\r\n        <div className=\"screen\">\r\n          <h1>MI Brews</h1>\r\n          <p>Metro Detroit Brewers</p>\r\n        </div>  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Map from './Map';\r\n\r\nclass Brewery extends Component {\r\n\r\n  render() {\r\n    const venue = this.props.location.state.venues;\r\n    console.log(venue)\r\n    let hours = 'closed';\r\n    if(venue.hours.isOpen){\r\n      hours = 'open';\r\n    }\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div className='nav'>\r\n         <Link\r\n              to='/'\r\n            >\r\n              Home \r\n          </Link> / {venue.name}\r\n        </div>  \r\n\r\n        <div className='hero'>\r\n          <div className='hero-text'>\r\n            <h2>{venue.name}</h2>\r\n          </div>\r\n          <img src={venue.bestPhoto.prefix + '720x720' + venue.bestPhoto.suffix} />        \r\n        </div>\r\n        <div className='open'>\r\n              {hours}\r\n        </div>  \r\n        <div className='address'>\r\n         {venue.location.formattedAddress[0]} , {venue.location.formattedAddress[1]}\r\n        </div>\r\n\r\n        <div className='description'>\r\n        {venue.description}\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Brewery;","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './component/Map';\nimport SquareApi from './api';\nimport SideBar from './component/SideBar';\nimport Hero from './component/Hero';\nimport Brewery from './component/Brewery';\nvar ReactRouter = require('react-router-dom');\nvar Route = ReactRouter.Route;\n\n//fousquare ID and Secret \n//the key values should be stored in a .env file in the root directory\nconst REACT_APP_ID = process.env.REACT_APP_ID;\nconst REACT_APP_SECRET = process.env.REACT_APP_SECRET;\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      venues: [],\n      markers: [],\n      center: [],\n      zoom: 7,\n      updateSuperState: obj => {\n        this.setState(obj);\n      }\n    };\n  }\n\n  closeAllMarkers = () => {\n    const markers = this.state.markers.map(marker => {\n      marker.isOpen = false;\n      return marker;\n    });\n    this.setState({markers: Object.assign(this.state.markers, markers) });\n  };\n\n  // // set new center\n  // setCenter = (marker) => {\n  //   this.setState({center: Object.assign(this.state.center, marker.lat, marker.lng)});\n  // }\n\n//marker click\n  handleMarkerClick = (marker) => {\n    //close any markers open\n    this.closeAllMarkers();\n    marker.isOpen = true;\n    this.setState({markers: Object.assign(this.state.markers,marker)})\n    // venue is venue that venue.id === marker.id\n    const venue = this.state.venues.find(venue => venue.id === marker.id);\n    // use squareApi to get venue details using marker.id as the id for the venue.\n    SquareApi.getVenueDetails(marker.id) \n    .then(res => {\n      // console.log(res);\n      const newVenue = Object.assign(venue, res.response.venue);\n      this.setState({venues: Object.assign(this.state.venues, newVenue)});\n    });\n    // // set new center value for map\n    // this.setCenter(marker);\n  };\n\n  \n\n\n\n  \n//listIemClick calls handleMarkerClick \n  // handleListItemClick = (venue) => {\n  //   // const marker = this.props.markers.find(marker => marker.id === venue.id);\n  //   // this.handleMarkerClick(marker);\n  //   console.log(venue);\n  //   // console.log(marker);\n  //   this.setState({venues: venue});\n  // };\n\n  //search for a limit 5 brewery venues near Brighton, MI \n  searchVenues = (version) => {\n    const endPoint = \"https://api.foursquare.com/v2/venues/search?\"\n    const parameters = {\n        client_id: REACT_APP_ID,\n        client_secret: REACT_APP_SECRET,\n        v: version,\n        near: 'Brighton, MI',\n        radius: 500000,\n        query: 'brewery',\n        limit: 2\n  }\n\n  fetch(\n    endPoint + new URLSearchParams(parameters))\n    .then((res) => {\n        if (!res.ok) {\n              throw Error(res.statusText);\n        }\n        return res.json();\n    })\n    .then(res => {\n      // console.log(res);\n      const { venues } = res.response;\n      const { center } = res.response.geocode.feature.geometry;\n      const markers = venues.map(venue => {\n        \n        return {\n          lat: venue.location.lat,\n          lng: venue.location.lng,\n          isOpen: false,\n          isVisible: true,\n          id: venue.id\n        };\n      }); \n      this.setState({ venues, center, markers });\n      // get photos for each venue stored in state\n      this.getPhotos();\n    })\n    .catch(error => {\n        window.alert(\"ERROR! \" + error);\n    }); \n  }\n\n  // get photos using foursquare api for each venue\n    getPhotos = () => {\n      this.state.venues.forEach(venue =>{\n        // console.log(this.state.venues[0]);\n\n        SquareApi.getVenueDetails(venue.id)\n          .then(res => {\n            const photo = res.response.venue;\n            // console.log(res.response.venue.bestPhoto.prefix + '100x100' + res.response.venue.bestPhoto.suffix);\n            const venueMatch = this.state.venues.find(venue => venue.id === photo.id);\n            const newVenue = Object.assign(venueMatch, photo);\n            this.setState({ venues: Object.assign(this.state.venues, newVenue) });\n          });\n      });  \n    }\n\n\n  // getPhotos = () => {\n  //   this.state.venues.forEach(venue => {\n  //     const venueMatch = this.state.venues.find(venue => venue.id === photo.id);\n  //     // use squareApi to get venue details using marker.id as the id for the venue.\n  //     SquareApi.getVenueDetails(venue.id)\n  //       .then(res => {\n  //         // console.log(res);\n  //         const newVenue = Object.assign(venueMatch, res.response.venue);\n  //         this.setState({ venues: Object.assign(this.state.venues, newVenue) });\n  //       });\n  //   })\n  // };\n  \n  \n   \n  \n  componentDidMount(){\n    // google map api load error\n    window.gm_authFailure = () => {\n      window.alert('google maps error');\n    };\n    this.searchVenues(20180323);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Hero />\n        <Route exact path='/' render={() => (\n          <div className=\"main\">\n            <SideBar\n              {...this.state}\n              handleListItemClick={this.handleListItemClick}\n            />\n\n            <Map\n              {...this.state}\n              handleMarkerClick={this.handleMarkerClick}\n            />\n          </div>\n        )}\n        />\n        \n        {/* Dynamic venue details page */}\n        <Route path='/brewery' render={(props) => (\n          <div>\n            <Brewery {...props} />\n            <Map\n              {...this.state}\n              handleMarkerClick={this.handleMarkerClick}\n            />\n          </div>  \n        )}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\nReactDOM.render(\n     <BrowserRouter basename='/mi-brews'>\n          <App />\n     </BrowserRouter>,\n     document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
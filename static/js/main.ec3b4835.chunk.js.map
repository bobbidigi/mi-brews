{"version":3,"sources":["component/Map.js","api/index.js","component/ListItem.js","component/VenueList.js","component/SideBar.js","component/Hero.js","App.js","serviceWorker.js","index.js"],"names":["gMapUrl","concat","process","MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","tabIndex","markers","filter","marker","isVisible","map","idx","arr","venueInfo","venues","find","venue","id","key","position","onClick","handleMarkerClick","animation","length","isOpen","google","maps","Animation","BOUNCE","DROP","bestPhoto","InfoBox_default","Fragment","className","src","prefix","suffix","alt","name","aria-labelledby","href","shortUrl","target","rel","Map","Object","assign","this","isMarkerShown","googleMapURL","loadingElement","containerElement","mapElement","Component","REACT_APP_ID","console","log","Helper","keys","client_id","client_secret","v","join","urlPrams","Accept","endPoint","method","requestData","headers","fetch","baseURL","auth","urlBuilder","then","res","json","catch","error","window","alert","SquareApi","simpleFetch","VENUE_ID","ListItem","_this","role","handleListItemClick","categories","icon","location","formattedAddress","VenueList","ListItem_ListItem","SideBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterVenues","state","query","trim","toLowerCase","includes","handleChange","e","setState","value","nameMatched","locationMatched","updateSuperState","type","placeholder","onChange","VenueList_VenueList","Hero","REACT_APP_SECRET","App","closeAllMarkers","getVenueDetails","newVenue","response","searchVenues","version","URLSearchParams","near","radius","limit","ok","Error","statusText","geocode","feature","geometry","obj","gm_authFailure","Hero_Hero","SideBar_SideBar","Map_Map","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4SAWMA,EAAO,uDAAAC,OADaC,2CAIpBC,EAAiBC,uBACrBC,wBAAc,SAAAC,GAAK,OACnBC,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEC,YAAa,EACbC,KAAMN,EAAMM,KACZC,cAAe,CAAEC,IAAK,OAAQC,KAAM,QACpCC,OAAQV,EAAMU,OACdC,UAAW,GAGVX,EAAMY,SACNZ,EAAMY,QAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,YAGpCC,IAAI,SAACF,EAAQG,EAAKC,GACjB,IAAMC,EAAYnB,EAAMoB,OAAOC,KAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOT,EAAOS,KAEjE,OAAOtB,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACLoB,IAAKP,EACLQ,SAAU,CAAEjB,IAAKM,EAAON,IAAKC,IAAKK,EAAOL,KACzCiB,QAAS,kBAAM1B,EAAM2B,kBAAkBb,IAEvCc,UAA0B,IAAfV,EAAIW,QAAgBf,EAAOgB,OAClCC,OAAOC,KAAKC,UAAUC,OAEtBH,OAAOC,KAAKC,UAAUE,MAGzBrB,EAAOgB,QACRX,EAAUiB,WACRnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,KACED,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,KACErC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,kBACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,aACbC,IAAG,GAAA7C,OAAKwB,EAAUiB,UAAUK,OAAzB,WAAA9C,OAAyCwB,EAAUiB,UAAUM,QAChEC,IAAKxB,EAAUyB,OACjB3C,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,YACbtC,EAAAC,EAAAC,cAAA,KAAGoC,UAAU,aAAapB,EAAUyB,MACpC3C,EAAAC,EAAAC,cAAA,KAAG0C,kBAAiB,YACnBN,UAAU,WACVO,KAAM3B,EAAU4B,SACfC,OAAO,SACPC,IAAI,uBAJN,wBAkBCC,mLAEjB,OACAjD,EAAAC,EAAAC,cAAEN,EAAFsD,OAAAC,OAAA,GACMC,KAAKrD,MADX,CAEEsD,eAAa,EACbC,aAAc7D,EACd8D,eAAgBvD,EAAAC,EAAAC,cAAA,OAAMoC,UAAU,oBAChCkB,iBAAkBxD,EAAAC,EAAAC,cAAA,OAAMoC,UAAU,kBAClCmB,WAAYzD,EAAAC,EAAAC,cAAA,OAAOoC,UAAU,0BATFoB,aCpE3BC,EAAehE,mDAErBiE,QAAQC,IAAIF,GACZC,QAAQC,IAFiBlE,wDAInBmE,yGAEF,MAAO,+DAGP,IAAMC,EAAO,CACXC,UAAWL,EACXM,cAXmBtE,mDAYnBuE,EAAG,YAEL,OAAOhB,OAAOa,KAAKA,GAChBhD,IAAI,SAAAQ,GAAG,SAAA7B,OAAO6B,EAAP,KAAA7B,OAAcqE,EAAKxC,MAC1B4C,KAAK,wCAEQC,GAChB,OAAIA,EAGGlB,OAAOa,KAAKK,GAChBrD,IAAI,SAAAQ,GAAG,SAAA7B,OAAO6B,EAAP,KAAA7B,OAAc0E,EAAS7C,MAC9B4C,KAAK,KAJC,qCAOT,MAAO,CACLE,OAAQ,wDAGOC,EAAUC,EAAQH,GACnC,IAAII,EAAc,CAChBD,SACAE,QAASX,EAAOW,WAElB,OAAOC,MAAK,GAAAhF,OAAIoE,EAAOa,WAAXjF,OAAuB4E,GAAvB5E,OAAkCoE,EAAOc,OAAzC,KAAAlF,OAAmDoE,EAAOe,WACpET,IAEFI,GACEM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SACjBC,MAAM,SAAAC,GACHC,OAAOC,MAAM,UAAYF,cAKZG,sGACLjB,GACZ,OAAON,EAAOwB,YAAY,kBAAmB,MAAOlB,2CAE/BmB,GACrB,OAAOzB,EAAOwB,YAAP,WAAA5F,OAA8B6F,EAA9B,KAA0C,8CAE7BA,GACpB,OAAOzB,EAAOwB,YAAP,WAAA5F,OAA8B6F,EAA9B,YAAkD,gBCxDxCC,mLACV,IAAAC,EAAArC,KACP,OACEpD,EAAAC,EAAAC,cAAA,MACEoC,UAAU,WACVM,kBAAiBQ,KAAKrD,MAAM4C,KAC5B+C,KAAM,cACNhF,SAAU,EACVe,QAAS,kBAAMgE,EAAK1F,MAAM4F,oBAAoBF,EAAK1F,SAEnDC,EAAAC,EAAAC,cAAA,OAAKqC,IAAKa,KAAKrD,MAAM6F,WAAW,GAAGC,KAAKrD,OAAO,KAAKY,KAAKrD,MAAM6F,WAAW,GAAGC,KAAKpD,OAAQC,IAAK,UAC/F1C,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,WACbtC,EAAAC,EAAAC,cAAA,KAAGoC,UAAU,gBAAgBc,KAAKrD,MAAM4C,MACxC3C,EAAAC,EAAAC,cAAA,KAAGoC,UAAU,mBAAmBc,KAAKrD,MAAM+F,SAASC,iBAAiB,IACrE/F,EAAAC,EAAAC,cAAA,KAAGoC,UAAU,mBAAmBc,KAAKrD,MAAM+F,SAASC,iBAAiB,aAdzCrC,aCCjBsC,mLACV,IAAAP,EAAArC,KACP,OACEpD,EAAAC,EAAAC,cAAA,MAAIoC,UAAU,YACXc,KAAKrD,MAAMoB,QACViC,KAAKrD,MAAMoB,OAAOJ,IAAI,SAACM,EAAOL,GAAR,OACpBhB,EAAAC,EAAAC,cAAC+F,EAAD/C,OAAAC,OAAA,CACE5B,IAAKP,GACDK,EAFN,CAGEsE,oBAAqBF,EAAK1F,MAAM4F,iCATPjC,aCAlBwC,cACnB,SAAAA,IAAc,IAAAT,EAAA,OAAAvC,OAAAiD,EAAA,EAAAjD,CAAAE,KAAA8C,IACZT,EAAAvC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAF,OAAAmD,EAAA,EAAAnD,CAAAgD,GAAAI,KAAAlD,QASFmD,mBAAqB,WAEjB,GAA+B,KAA5Bd,EAAKe,MAAMC,MAAMC,OAAe,CACnC,IAAMvF,EAASsE,EAAK1F,MAAMoB,OAAOP,OAAO,SAAAS,GAAK,OAI7CA,EAAMsB,KAAKgE,cAAcC,SAASnB,EAAKe,MAAMC,MAAME,eACnDtF,EAAMyE,SAASC,iBAAiB,GAAGY,cAAcC,SAASnB,EAAKe,MAAMC,MAAME,iBAG3E,OAFA/C,QAAQC,IAAI1C,GAELA,EAGR,OAAOsE,EAAK1F,MAAMoB,QAxBPsE,EA2BdoB,aAAe,SAAAC,GACbrB,EAAKsB,SAAS,CAAEN,MAAOK,EAAE/D,OAAOiE,QAEhC,IAAMrG,EAAU8E,EAAK1F,MAAMoB,OAAOJ,IAAI,SAAAM,GAIpC,IAAM4F,EAAc5F,EAAMsB,KACzBgE,cACAC,SAASE,EAAE/D,OAAOiE,MAAML,eACnBO,EAAkB7F,EAAMyE,SAASC,iBAAiB,GACrDY,cACAC,SAASE,EAAE/D,OAAOiE,MAAML,eACrB9F,EAAS4E,EAAK1F,MAAMY,QAAQS,KAAK,SAAAP,GAAM,OAAIA,EAAOS,KAAOD,EAAMC,KAQrE,OALET,EAAOC,aADNmG,IAAeC,GAMXrG,IAKT4E,EAAK1F,MAAMoH,iBAAiB,CAAExG,aAlD9B8E,EAAKe,MAAQ,CACXC,MAAO,GACPtF,OAAQ,IALEsE,wEAyDZ,OACAzF,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,WACbtC,EAAAC,EAAAC,cAAA,SACEkH,KAAM,SACN9F,GAAI,SACJ+F,YAAa,SACbC,SAAUlE,KAAKyD,aACfjE,kBAAiB,SACjBlC,SAAU,IAEZV,EAAAC,EAAAC,cAACqH,EAADrE,OAAAC,OAAA,GACMC,KAAKrD,MADX,CAEEoB,OAAQiC,KAAKmD,qBACbZ,oBAAqBvC,KAAKrD,MAAM4F,+BAvEHjC,aCDhB8D,mLAEjB,OACExH,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,mBACbtC,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,UACbtC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2CANwBwD,aCQ5BC,EAAehE,mDACf8H,EAAmB9H,mDA4HV+H,cAzHb,SAAAA,IAAa,IAAAjC,EAAA,OAAAvC,OAAAiD,EAAA,EAAAjD,CAAAE,KAAAsE,IACXjC,EAAAvC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAF,OAAAmD,EAAA,EAAAnD,CAAAwE,GAAApB,KAAAlD,QAYFuE,gBAAkB,WAChB,IAAMhH,EAAU8E,EAAKe,MAAM7F,QAAQI,IAAI,SAAAF,GAErC,OADAA,EAAOgB,QAAS,EACThB,IAET4E,EAAKsB,SAAS,CAACpG,QAASuC,OAAOC,OAAOsC,EAAKe,MAAM7F,QAASA,MAlB/C8E,EA2Bb/D,kBAAoB,SAACb,GAEnB4E,EAAKkC,kBACL9G,EAAOgB,QAAS,EAChB4D,EAAKsB,SAAS,CAACpG,QAASuC,OAAOC,OAAOsC,EAAKe,MAAM7F,QAAQE,KAEzD,IAAMQ,EAAQoE,EAAKe,MAAMrF,OAAOC,KAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOT,EAAOS,KAElE+D,EAAUuC,gBAAgB/G,EAAOS,IAChCwD,KAAK,SAAAC,GACJ,IAAM8C,EAAW3E,OAAOC,OAAO9B,EAAO0D,EAAI+C,SAASzG,OACnDoE,EAAKsB,SAAS,CAAC5F,OAAQ+B,OAAOC,OAAOsC,EAAKe,MAAMrF,OAAQ0G,QAtC/CpC,EA6CbE,oBAAsB,SAACtE,GACrB,IAAMR,EAAS4E,EAAKe,MAAM7F,QAAQS,KAAK,SAAAP,GAAM,OAAIA,EAAOS,KAAOD,EAAMC,KACrEmE,EAAK/D,kBAAkBb,GACvB+C,QAAQC,IAAIxC,IAhDDoE,EAoDbsC,aAAe,SAACC,GAYhBtD,MAXmB,+CAYN,IAAIuD,gBAXI,CACfjE,UAAWL,EACXM,cAAewD,EACfvD,EAAG8D,EACHE,KAAM,eACNC,OAAQ,IACR1B,MAAO,UACP2B,MAAO,KAKVtD,KAAK,SAACC,GACH,IAAKA,EAAIsD,GACH,MAAMC,MAAMvD,EAAIwD,YAEtB,OAAOxD,EAAIC,SAEdF,KAAK,SAAAC,GACJnB,QAAQC,IAAIkB,EAAI+C,SAAS3G,QADd,IAEHA,EAAW4D,EAAI+C,SAAf3G,OACAV,EAAWsE,EAAI+C,SAASU,QAAQC,QAAQC,SAAxCjI,OACFE,EAAUQ,EAAOJ,IAAI,SAAAM,GACzB,MAAO,CACLd,IAAKc,EAAMyE,SAASvF,IACpBC,IAAKa,EAAMyE,SAAStF,IACpBqB,QAAQ,EACRf,WAAW,EACXQ,GAAID,EAAMC,MAGdmE,EAAKsB,SAAS,CAAE5F,SAAQV,SAAQE,cAC/BsE,MAAM,SAAAC,GACLC,OAAOC,MAAM,UAAYF,MArF7BO,EAAKe,MAAO,CACVrF,OAAQ,GACRR,QAAS,GACTF,OAAQ,GACRJ,KAAM,EACN8G,iBAAkB,SAAAwB,GAChBlD,EAAKsB,SAAS4B,KARPlD,mFA+FXN,OAAOyD,eAAiB,WACtBzD,OAAOC,MAAM,sBAEfhC,KAAK2E,aAAa,2CAIlB,OACE/H,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,OACbtC,EAAAC,EAAAC,cAAC2I,EAAD,MACA7I,EAAAC,EAAAC,cAAA,OAAKoC,UAAU,QACbtC,EAAAC,EAAAC,cAAC4I,EAAD5F,OAAAC,OAAA,GACMC,KAAKoD,MADX,CAEEb,oBAAqBvC,KAAKuC,uBAG5B3F,EAAAC,EAAAC,cAAC6I,EAAD7F,OAAAC,OAAA,GACMC,KAAKoD,MADX,CAEE9E,kBAAmB0B,KAAK1B,8BAlHlBgC,aCHZsF,EAAcC,QACW,cAA7B9D,OAAOW,SAASoD,UAEe,UAA7B/D,OAAOW,SAASoD,UAEhB/D,OAAOW,SAASoD,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTvE,KAAK,SAAA4E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpD,QACf+C,UAAUC,cAAcO,YAK1BnG,QAAQC,IAAI,6CAGRyF,EAAOU,UACTV,EAAOU,SAASN,KAMlB9F,QAAQC,IAAI,sCAGRyF,EAAOW,WACTX,EAAOW,UAAUP,SAO5BzE,MAAM,SAAAC,GACLtB,QAAQsB,MAAM,4CAA6CA,KCnFjEgF,IAASC,OAAOnK,EAAAC,EAAAC,cAACkK,EAAD,MAASC,SAASC,eAAe,SDc1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAI5K,YAAwBwF,OAAOW,UAC3C0E,SAAWrF,OAAOW,SAAS0E,OAIvC,OAGFrF,OAAOsF,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAA3J,OAAMC,YAAN,sBAEPqJ,GA2DV,SAAiCK,EAAOC,GAEtC5E,MAAM2E,GACHvE,KAAK,SAAAgD,GAGkB,MAApBA,EAAS4C,SACuD,IAAhE5C,EAASrD,QAAQkG,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAM/F,KAAK,SAAA4E,GACjCA,EAAaoB,aAAahG,KAAK,WAC7BK,OAAOW,SAASiF,aAKpB3B,EAAgBC,EAAOC,KAG1BrE,MAAM,WACLrB,QAAQC,IACN,mEA/EAmH,CAAwB3B,EAAOC,GAI/BC,UAAUC,cAAcqB,MAAM/F,KAAK,WACjClB,QAAQC,IACN,+GAMJuF,EAAgBC,EAAOC,MCrC/BE","file":"static/js/main.ec3b4835.chunk.js","sourcesContent":["/* global google */\r\n//map components use react-google-maps https://tomchentw.github.io/react-google-maps/\r\nimport React, { Component } from \"react\";\r\nimport { withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\r\n\r\nconst REACT_APP_MAP_KEY = process.env.REACT_APP_MAP_KEY;\r\nconst gMapUrl = `https://maps.googleapis.com/maps/api/js?v=3.exp&key=${REACT_APP_MAP_KEY}`;\r\n\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={7}\r\n    zoom={props.zoom}\r\n    defaultCenter={{ lat: 30.397, lng: -97.644 }}\r\n    center={props.center}\r\n    tabIndex={-1}\r\n    >\r\n    {/* if there is markers filter visible markers  */}\r\n    {props.markers &&\r\n     props.markers.filter(marker => marker.isVisible)\r\n    //  map over visible markers \r\n    // index as key\r\n      .map((marker, idx, arr) => {\r\n        const venueInfo = props.venues.find(venue => venue.id === marker.id);\r\n\r\n        return <Marker\r\n          key={idx} \r\n          position={{ lat: marker.lat, lng: marker.lng}}\r\n          onClick={() => props.handleMarkerClick(marker)}\r\n          // animate 1 open marker\r\n          animation={arr.length === 1 || marker.isOpen\r\n            ? google.maps.Animation.BOUNCE\r\n            //animate drop all markers  \r\n            : google.maps.Animation.DROP }\r\n        >\r\n        {/* info window */}\r\n          {marker.isOpen && \r\n          venueInfo.bestPhoto && (\r\n            <InfoBox>\r\n              <React.Fragment>\r\n                <div className=\"info-container\">\r\n                  <img className=\"info-image\"\r\n                    src={`${venueInfo.bestPhoto.prefix}100x100${venueInfo.bestPhoto.suffix}`}\r\n                    alt={venueInfo.name} />\r\n                  <div className='info-div'>\r\n                    <p className=\"info-name\">{venueInfo.name}</p>\r\n                    <a aria-labelledby={'more info'}\r\n                     className=\"info-url\" \r\n                     href={venueInfo.shortUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                     >More Info</a>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            </InfoBox>\r\n          )}\r\n        </Marker>\r\n      })}\r\n  </GoogleMap>\r\n))\r\n)\r\n\r\n\r\nexport default class Map extends Component {\r\n  render(){\r\n    return (\r\n    < MyMapComponent \r\n      {...this.props}\r\n      isMarkerShown\r\n      googleMapURL={gMapUrl}\r\n      loadingElement={< div className='loading-element' />}\r\n      containerElement={< div className='map-container' />}\r\n      mapElement={< div  className='map-element' />}\r\n    />\r\n    );\r\n  }\r\n}  ","//credit: for squareApi https://www.youtube.com/watch?v=Dj5hzKBxCBI&list=PL4rQq4MQP1crXuPtruu_eijgOUUXhcUCP&index=3\r\n// const env = from './env'\r\nconst REACT_APP_ID = process.env.REACT_APP_ID;\r\nconst REACT_APP_SECRET = process.env.REACT_APP_SECRET;\r\nconsole.log(REACT_APP_ID);\r\nconsole.log(REACT_APP_SECRET);\r\n\r\nclass Helper {\r\n  static baseURL(){\r\n    return \"https://api.foursquare.com/v2\"\r\n  }\r\n  static auth(){\r\n    const keys = {\r\n      client_id: REACT_APP_ID,\r\n      client_secret: REACT_APP_SECRET,\r\n      v: '20180323'\r\n    };\r\n    return Object.keys(keys)\r\n      .map(key => `${key}=${keys[key]}`)\r\n      .join('&');\r\n  }\r\n  static urlBuilder(urlPrams){\r\n    if(!urlPrams){\r\n      return \"\"\r\n    }\r\n    return Object.keys(urlPrams)\r\n      .map(key => `${key}=${urlPrams[key]}`)\r\n      .join(\"&\");\r\n  }\r\n  static headers() {\r\n    return {\r\n      Accept: 'application/json'\r\n    };\r\n  }\r\n  static simpleFetch(endPoint, method, urlPrams){\r\n    let requestData = {\r\n      method,\r\n      headers: Helper.headers()\r\n    };\r\n    return fetch(`${Helper.baseURL()}${endPoint}${Helper.auth()}&${Helper.urlBuilder(\r\n      urlPrams\r\n    )}`,\r\n    requestData\r\n    ).then(res => res.json())\r\n    .catch(error => {\r\n        window.alert(\"ERROR! \" + error);\r\n    });\r\n  }\r\n} \r\n\r\nexport default class SquareApi {\r\n  static search(urlPrams){\r\n    return Helper.simpleFetch('/venues/search?', 'GET', urlPrams);\r\n  }\r\n  static getVenueDetails(VENUE_ID){\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}?`,\"GET\");\r\n  }\r\n  static getVenuePhotos(VENUE_ID){\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}/photos?`, \"GET\");\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class ListItem extends Component {\r\n  render() {\r\n    return (\r\n      <li \r\n        className=\"listItem\"\r\n        aria-labelledby={this.props.name}\r\n        role={'contentinfo'}\r\n        tabIndex={0}\r\n        onClick={() => this.props.handleListItemClick(this.props)}\r\n        >\r\n        <img src={this.props.categories[0].icon.prefix+'32'+this.props.categories[0].icon.suffix} alt={'venue'}/>\r\n        <div className='details'>\r\n          <p className=\"details-name\">{this.props.name}</p>\r\n          <p className=\"details-address\">{this.props.location.formattedAddress[0]}</p>\r\n          <p className=\"details-address\">{this.props.location.formattedAddress[1]}</p>\r\n        </div>\r\n        \r\n      </li>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nexport default class VenueList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"venuList\">\r\n        {this.props.venues && \r\n          this.props.venues.map((venue, idx) => ( \r\n            <ListItem \r\n              key={idx} \r\n              {...venue}\r\n              handleListItemClick={this.props.handleListItemClick}\r\n            />\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport VenueList from \"./VenueList\";\r\n\r\nexport default class SideBar extends Component {\r\n  constructor() {\r\n    super();\r\n    // query set to empty string\r\n    this.state = {\r\n      query: '',\r\n      venues: []\r\n    };\r\n  }\r\n\r\n// The list items and markers will display only those which match the query\r\n  handleFilterVenues = () => {\r\n    // if query does not equal an empty string\r\n      if(this.state.query.trim() !== '') {\r\n      const venues = this.props.venues.filter(venue =>  \r\n      // toLowerCase so the user can use capital or lowercase in search query\r\n      //str.includes(query) checks the str against the query.toLowerCase\r\n      //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n      venue.name.toLowerCase().includes(this.state.query.toLowerCase()) +    \r\n      venue.location.formattedAddress[1].toLowerCase().includes(this.state.query.toLowerCase()));\r\n      console.log(venues);\r\n      //returning the venues that match\r\n      return venues;\r\n    }\r\n    // all\r\n     return this.props.venues;\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.target.value });\r\n\r\n    const markers = this.props.venues.map(venue => {\r\n      // toLowerCase so the user can use capital or lowercase in search query\r\n      //str.includes(query) checks the str against the query.toLowerCase\r\n      //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n      const nameMatched = venue.name\r\n      .toLowerCase()\r\n      .includes(e.target.value.toLowerCase());\r\n      const locationMatched = venue.location.formattedAddress[1]\r\n        .toLowerCase()\r\n        .includes(e.target.value.toLowerCase());\r\n      const marker = this.props.markers.find(marker => marker.id === venue.id);\r\n      //if the name or location matched marker is visible\r\n      if(nameMatched || locationMatched) {\r\n        marker.isVisible = true;\r\n      } else {\r\n        marker.isVisible = false;\r\n      }\r\n      //returning the markers that match\r\n      return marker;\r\n    });\r\n    //The below is just a reminder for myself since I'm new to React\r\n    // this.props.updateSuperState({markers: Object.assign(this.props.markers, markers)});\r\n    // this.props.updateSuperState({markers: markers});\r\n    this.props.updateSuperState({ markers });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n    <div className='sidebar'>\r\n      <input \r\n        type={'search'}\r\n        id={'search'} \r\n        placeholder={'Search'}\r\n        onChange={this.handleChange}\r\n        aria-labelledby={'search'}\r\n        tabIndex={0}\r\n        />\r\n      <VenueList \r\n        {...this.props}\r\n        venues={this.handleFilterVenues()}\r\n        handleListItemClick={this.props.handleListItemClick}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Hero extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"image-container\">\r\n        <div className=\"screen\">\r\n          <h1>MI Brews</h1>\r\n          <p>Metro Detroit Brewers</p>\r\n        </div>  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './component/Map';\nimport SquareApi from './api';\nimport SideBar from './component/SideBar';\nimport Hero from './component/Hero';\n\n\n//fousquare ID and Secret \n//the key values should be stored in a .env file in the root directory\nconst REACT_APP_ID = process.env.REACT_APP_ID;\nconst REACT_APP_SECRET = process.env.REACT_APP_SECRET;\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      venues: [],\n      markers: [],\n      center: [],\n      zoom: 7,\n      updateSuperState: obj => {\n        this.setState(obj);\n      }\n    };\n  }\n\n  closeAllMarkers = () => {\n    const markers = this.state.markers.map(marker => {\n      marker.isOpen = false;\n      return marker;\n    });\n    this.setState({markers: Object.assign(this.state.markers, markers) });\n  };\n\n  // // set new center\n  // setCenter = (marker) => {\n  //   this.setState({center: Object.assign(this.state.center, marker.lat, marker.lng)});\n  // }\n\n//marker click\n  handleMarkerClick = (marker) => {\n    //close any markers open\n    this.closeAllMarkers();\n    marker.isOpen = true;\n    this.setState({markers: Object.assign(this.state.markers,marker)})\n    // venue is venue that venue.id === marker.id\n    const venue = this.state.venues.find(venue => venue.id === marker.id);\n    // use squareApi to get venue details using marker.id as the id for the venue.\n    SquareApi.getVenueDetails(marker.id) \n    .then(res => {\n      const newVenue = Object.assign(venue, res.response.venue);\n      this.setState({venues: Object.assign(this.state.venues, newVenue)});\n    });\n    // // set new center value for map\n    // this.setCenter(marker);\n  };\n  \n//listIemClick calls handleMarkerClick \n  handleListItemClick = (venue) => {\n    const marker = this.state.markers.find(marker => marker.id === venue.id);\n    this.handleMarkerClick(marker);\n    console.log(venue);\n  };\n\n  //search for a limit 5 brewery venues near Brighton, MI \n  searchVenues = (version) => {\n    const endPoint = \"https://api.foursquare.com/v2/venues/search?\"\n    const parameters = {\n        client_id: REACT_APP_ID,\n        client_secret: REACT_APP_SECRET,\n        v: version,\n        near: 'Brighton, MI',\n        radius: 500000,\n        query: 'brewery',\n        limit: 5\n  }\n\n  fetch(\n    endPoint + new URLSearchParams(parameters))\n    .then((res) => {\n        if (!res.ok) {\n              throw Error(res.statusText);\n        }\n        return res.json();\n    })\n    .then(res => {\n      console.log(res.response.venues);\n      const { venues } = res.response;\n      const { center } = res.response.geocode.feature.geometry;\n      const markers = venues.map(venue => {\n        return {\n          lat: venue.location.lat,\n          lng: venue.location.lng,\n          isOpen: false,\n          isVisible: true,\n          id: venue.id\n        };\n      });\n      this.setState({ venues, center, markers });\n    }).catch(error => {\n        window.alert(\"ERROR! \" + error);\n    });\n  }\n  \n   \n  \n  componentDidMount(){\n    // google map api load error\n    window.gm_authFailure = () => {\n      window.alert('google maps error');\n    };\n    this.searchVenues(20180323);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Hero />\n        <div className=\"main\">\n          <SideBar\n            {...this.state}\n            handleListItemClick={this.handleListItemClick}\n          />\n\n          <Map\n            {...this.state}\n            handleMarkerClick={this.handleMarkerClick}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}